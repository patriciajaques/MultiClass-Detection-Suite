Help on module utils:

NAME
    utils

FUNCTIONS
    determine_features_to_remove(df)
        Retorna apenas as colunas que são features.
        
        Args:
            df (pd.DataFrame): DataFrame contendo os dados.
        
        Returns:
            pd.DataFrame: DataFrame contendo apenas as features.
    
    get_behavior_features(df)
        Retorna apenas as colunas que são features de comportamento.
        
        Args:
            df (pd.DataFrame): DataFrame contendo os dados.
        
        Returns:
            pd.DataFrame: DataFrame contendo apenas as features de comportamento.
    
    get_personality_features(df)
        Retorna apenas as colunas que são features de personalidade.
        
        Args:
            df (pd.DataFrame): DataFrame contendo os dados.
        
        Returns:
            pd.DataFrame: DataFrame contendo apenas as features de personalidade.
    
    split_data_stratified(data, test_size=0.2, target_column='comportamento', n_splits=10, random_state=42)
        Splits the DataFrame into train and test sets ensuring a representative number of classes in the test set.
        
        Parameters:
        - data: pd.DataFrame - The DataFrame containing features and target.
        - test_size: float - Proportion of the dataset to include in the test split.
        - target_column: str - The target column to ensure class representation.
        
        Returns:
        - train_data: pd.DataFrame - Training data.
        - test_data: pd.DataFrame - Testing data.
    
    split_features_and_target(df)
        Splits the DataFrame into features (X) and target (y).
        
        Parameters:
        - df: pd.DataFrame - The DataFrame containing features and target.
        
        Returns:
        - X: pd.DataFrame - containing the features.
        - y: pd.DataFrame - containing the target.
    
    split_stratified_student_level(data, test_size=0.2, column_name='aluno', target_column='comportamento', n_splits=10)
        Splits the DataFrame into student level and ensures a representative number of classes in the test set.
        
        Parameters:
        - data: pd.DataFrame - The DataFrame containing features and target.
        - test_size: float - Proportion of the dataset to include in the test split.
        - column_name: str - The column name identifying the students.
        - target_column: str - The target column to ensure class representation.
        
        Returns:
        - train_data: pd.DataFrame - Training data.
        - test_data: pd.DataFrame - Testing data.
    
    split_student_level(data, test_size=0.2, column_name='aluno')
        Splits the DataFrame into student level.
        
        Parameters:
        - df: pd.DataFrame - The DataFrame containing features and target.
        
        Returns:
        - X: pd.DataFrame - containing the features.
        - y: pd.DataFrame - containing the target.

FILE
    /Users/patricia/Documents/code/python-code/behavior-detection/src/utils.py


